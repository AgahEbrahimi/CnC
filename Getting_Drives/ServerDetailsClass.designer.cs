#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Getting_Drives
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CnC")]
	public partial class ServerDetailsClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertServerDetail(ServerDetail instance);
    partial void UpdateServerDetail(ServerDetail instance);
    partial void DeleteServerDetail(ServerDetail instance);
    #endregion
		
		public ServerDetailsClassDataContext() : 
				base(global::Getting_Drives.Properties.Settings.Default.CnCConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public ServerDetailsClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServerDetailsClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServerDetailsClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ServerDetailsClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ServerDetail> ServerDetails
		{
			get
			{
				return this.GetTable<ServerDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServerDetails")]
	public partial class ServerDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Drive;
		
		private string _AvailableSpace;
		
		private string _TotalFreeSpace;
		
		private string _TotalSize;
		
		private int _ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDriveChanging(string value);
    partial void OnDriveChanged();
    partial void OnAvailableSpaceChanging(string value);
    partial void OnAvailableSpaceChanged();
    partial void OnTotalFreeSpaceChanging(string value);
    partial void OnTotalFreeSpaceChanged();
    partial void OnTotalSizeChanging(string value);
    partial void OnTotalSizeChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public ServerDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Drive", DbType="NVarChar(50)")]
		public string Drive
		{
			get
			{
				return this._Drive;
			}
			set
			{
				if ((this._Drive != value))
				{
					this.OnDriveChanging(value);
					this.SendPropertyChanging();
					this._Drive = value;
					this.SendPropertyChanged("Drive");
					this.OnDriveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableSpace", DbType="NVarChar(MAX)")]
		public string AvailableSpace
		{
			get
			{
				return this._AvailableSpace;
			}
			set
			{
				if ((this._AvailableSpace != value))
				{
					this.OnAvailableSpaceChanging(value);
					this.SendPropertyChanging();
					this._AvailableSpace = value;
					this.SendPropertyChanged("AvailableSpace");
					this.OnAvailableSpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFreeSpace", DbType="NVarChar(MAX)")]
		public string TotalFreeSpace
		{
			get
			{
				return this._TotalFreeSpace;
			}
			set
			{
				if ((this._TotalFreeSpace != value))
				{
					this.OnTotalFreeSpaceChanging(value);
					this.SendPropertyChanging();
					this._TotalFreeSpace = value;
					this.SendPropertyChanged("TotalFreeSpace");
					this.OnTotalFreeSpaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSize", DbType="NVarChar(MAX)")]
		public string TotalSize
		{
			get
			{
				return this._TotalSize;
			}
			set
			{
				if ((this._TotalSize != value))
				{
					this.OnTotalSizeChanging(value);
					this.SendPropertyChanging();
					this._TotalSize = value;
					this.SendPropertyChanged("TotalSize");
					this.OnTotalSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
